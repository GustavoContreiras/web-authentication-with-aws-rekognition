import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useCallback, useRef, useState } from 'react'
import Webcam from "react-webcam";

export default function Home() {

  const webcamDimensions = { width: 640, height: 360 }
  const webcamRef: any = useRef(null);
  const takePhoto = useCallback(
    () => {
      if (webcamRef && webcamRef.current) {
        const imageSrc = webcamRef.current.getScreenshot();
        setProfilePhotoBase64(imageSrc)
      }
    },
    [webcamRef]
  );

  const [profilePhotoBase64, setProfilePhotoBase64] = useState('')
  const [clickedRegister, setClickedRegister] = useState(false)
  const [userData, setUserData] = useState(undefined)

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>

        <div className={styles.center}>

          {/* Webcam to take photo */}
          {!profilePhotoBase64 && <Webcam
            ref={webcamRef}
            audio={false}
            screenshotFormat="image/jpeg"
            width={webcamDimensions.width}
            height={webcamDimensions.height}
            videoConstraints={{
              width: webcamDimensions.width,
              height: webcamDimensions.height,
              facingMode: "user"
            }} />}

          {/* The photo taken */}
          {profilePhotoBase64 && <img src={profilePhotoBase64} width={webcamDimensions.width} height={webcamDimensions.height} />}

          {/* Name input button */}
          {clickedRegister && <input type='text' name='name' placeholder='Name' maxLength={255} style={{ width: 200, padding: 5, marginTop: 10, marginBottom: 5 }} required />}

          {/* Age input button */}
          {clickedRegister && <input type='number' name='age' placeholder='Age' min={1} max={130} style={{ width: 200, padding: 5, marginTop: 5, marginBottom: 5 }} required />}

          {/* Take profile picture button */}
          {!profilePhotoBase64 && clickedRegister && <button type='button' style={{ width: 200, padding: 5, marginTop: 5, marginBottom: 5 }} onClick={takePhoto}>Take profile picture</button>}

          {/* Take another profile picture button */}
          {profilePhotoBase64 && <button type='button' style={{ width: 200, padding: 5, marginTop: 5, marginBottom: 5 }} onClick={() => setProfilePhotoBase64('')}>Take another photo</button>}

          {/* Register button */}
          <button type='button' style={{ width: 200, padding: 5, marginTop: 10, marginBottom: 5 }} onClick={() => {

            if (!clickedRegister) {
              setClickedRegister(true)
              return
            } else {
              const name = (document.querySelector('input[name="name"]') as HTMLInputElement).value
              const age = (document.querySelector('input[name="age"]') as HTMLInputElement).value
              fetch('http://localhost:3001/users/register', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  name: name,
                  age: age,
                  profilePhotoBase64: profilePhotoBase64
                })
              }).then((res) => {
                if (res.status === 201) {
                  alert('Successfully registered.')
                  setClickedRegister(false)
                  setProfilePhotoBase64('')
                }
              })
            }
          }}>Register</button>

          {/* Login button */}
          {!clickedRegister && <button type='button' style={{ width: 200, padding: 5, marginTop: 5, marginBottom: 5 }} onClick={() => {

            let profilePhoto = profilePhotoBase64

            if (!profilePhoto && webcamRef && webcamRef.current) {
              profilePhoto = webcamRef.current.getScreenshot()
            }

            if (!profilePhoto) {
              alert("Couldn't take picture to complete login.")
              return
            }

            fetch('http://localhost:3001/users/login', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                profilePhotoBase64: profilePhoto
              })
            }).then((res) => {
              if (res.status === 201) {
                alert('Login successful.')
                res.json().then((userData) => {
                  setUserData(userData)
                })
              }
            })
          }}>Login</button>}

          {clickedRegister && <button type='button' style={{ width: 200, padding: 5, marginTop: 5, marginBottom: 5 }} onClick={() => {
            setClickedRegister(false)
          }}>Back</button>}

          {userData && <span>{JSON.stringify(userData, null, 4)}</span>}
        </div>
      </main>
    </>
  )
}
